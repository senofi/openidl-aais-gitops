---

#- name: Install required Ansible collections
#  delegate_to: localhost
#  shell: |
#    ansible-galaxy collection install ibm.blockchain_platform
#    ansible-galaxy collection install kubernetes.core

- name: register temporary directory
  tempfile:
    state: directory
  register: tmp_directory

- name: Configure awscli credentials for IAM user
  shell: /usr/local/bin/aws configure set {{ item.key }} {{ item.value }} --profile cicd-user
  no_log: false
  with_dict:
    aws_access_key_id: "{{ aws_access_key }}"
    aws_secret_access_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    format: "table"
    external_id: "{{ aws_external_id }}"
  changed_when: false

- name: Configure awscli credentials for IAM role
  shell: /usr/local/bin/aws configure set {{ item.key }} {{ item.value }} --profile cicd-role
  no_log: false
  with_dict:
    external_id: "{{ aws_external_id }}"
    source_profile: "cicd-user"
    role_arn: "{{ aws_iam_role }}"
    region: "{{ aws_region }}"
  changed_when: false

- name: Test AWS CLI is functioning
  shell: export AWS_PROFILE=cicd-role; /usr/local/bin/aws sts get-caller-identity
  register: aws_caller_identity

- name: Install required Python packages
  become: true
  pip:
    name: "{{ item.pkg_name }}"
    executable: "{{ item.exec }}"
    extra_args: "{{ item.args }}"
  loop:
    - { pkg_name: "fabric-sdk-py", exec: "pip3", args: "" }
    - { pkg_name: "python-pkcs11", exec: "pip3", args: "" }
    - { pkg_name: "semantic_version", exec: "pip3", args: "" }
