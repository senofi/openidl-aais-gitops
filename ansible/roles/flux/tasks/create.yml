---
- name: "Creating Flux namespace '{{ flux_namespace_name }}' if missing"
  k8s:
    name: "{{ flux_namespace_name }}"
    kind: Namespace
    state: present
    wait: true
    wait_sleep: 2
    wait_timeout: 60

- name: Creating git repo credentials
  k8s:
    state: present
    definition: 
      kind: Secret
      type: Opaque
      metadata:
        name: git-auth
        namespace: "{{ flux_namespace_name }}"
        label: flux
      stringData:
        GIT_AUTHUSER: "{{ git_username }}" 
        GIT_AUTHKEY: "{{ git_password }}"

- name: "Adding Flux Helm repo"
  kubernetes.core.helm_repository:
    name: "fluxcd"
    repo_url: "https://charts.fluxcd.io"

- name: "Installing helm-operator crds version '{{ helm_operator_version }}'"
  k8s:
    definition: '{{ lookup("url", "https://raw.githubusercontent.com/fluxcd/helm-operator/{{ helm_operator_version }}/deploy/crds.yaml", split_lines=False) }}'
    wait: true
    apply: true

- name: "Deploy Flux CD"
  kubernetes.core.helm:
    chart_ref: fluxcd/flux
    release_name: flux
    release_state: present
    release_namespace: "{{ flux_namespace_name }}"
    force: True
    wait: True
    wait_timeout: "300s"
    update_repo_cache: True
    disable_hook: True
    release_values:
      git:
        secretName: "git-auth"
        timeout: "200s"
        pollInterval: "2m"
        url: "https://{{ git_username }}:{{ git_password }}@{{ git_repo }}"
        branch: "{{ git_branch }}"
        label: 'sync' 
        path: "{{ git_path }}"  
      rbac:
        create: true 
        pspEnabled: false 
      registry:
       insecureHosts: "{{ network_docker_url }}" 

- name: "Deploy Helm Operator"
  kubernetes.core.helm:
    atomic: yes
    chart_ref: fluxcd/helm-operator
    release_name: flux-helm-operator
    release_state: present
    release_namespace: "{{ flux_namespace_name }}"
    wait: True
    wait_timeout: "300s"
    force: True
    update_repo_cache: True
    disable_hook: True
    release_values:
      git:
        secretName: "git-auth"
        timeout: "200s"
        pollInterval: "2m"
        url: "https://{{ git_username }}:{{ git_password }}@{{ git_repo }}"
      rbac:
        create: true 
        pspEnabled: false 
      helm:
        versions: "v3"
...