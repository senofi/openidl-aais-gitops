---
- name: Delete the config directory
  file:
    path: /tmp/openidl-code/{{ env_id }}-config
    state: absent

- name: Create org config directory
  file:
    path: /tmp/openidl-code/{{ env_id }}-config
    state: directory
    mode: 0755

- name: "Pull openidl apps configs"
  include_tasks: "read-config-{{ cloud_provider }}.yaml"

- name: Create a connection profile
  no_log: "{{hide_sensitive_logs}}"
  ibm.blockchain_platform.connection_profile:
    api_endpoint: "{{ console_api_endpoint }}"
    api_authtype: "{{ console_api_authtype }}"
    api_key: "{{ console_username }}"
    api_secret: "{{ console_password }}"
    name: "{{ org_id }} Gateway"
    path: "{{config_folder}}/connection-profile.json"
    organization: "{{ org_id }}"
    certificate_authority: "{{ cert_auth }}"
    peers:
      - "{{ console_peer }}"

- name: Generate configuration files
  template:
    src: templates/{{ item.source }}.j2
    dest: '{{config_folder}}/{{ item.dest }}'
    mode: 0755
  vars:
    organization_ids: "{{ organizations.stdout }}"
    aws_access_id: "{{ apps_user_access_id.stdout }}"
    aws_access_secret_key: "{{ apps_user_secret_key.stdout }}"
    aws_cognito_application_id: "{{ cognito_app_client_id.stdout }}"
    aws_cognito_pool_id: "{{ cognito_user_pool_id.stdout }}"
    mongo_user: "{{ mongodb_user.stdout }}"
    mongo_user_token: "{{ mongodb_user_token.stdout }}"
    s3_hds_bucket: "{{aws_s3_hds_bucket}}"
  with_items: "{{app_config_files_list}}"

- name: Generate configuration files
  template:
    src: templates/{{ item }}.j2
    dest: '{{config_folder}}/{{ item }}'
    mode: 0755
  vars:
    organization_ids: "{{ organizations.stdout }}"
    aws_access_id: "{{ apps_user_access_id.stdout }}"
    aws_secret_key: "{{ apps_user_secret_key.stdout }}"
    aws_cognito_application_id: "{{ cognito_app_client_id.stdout }}"
    aws_cognito_pool_id: "{{ cognito_user_pool_id.stdout }}"
    mongo_user: "{{ mongodb_user.stdout }}"
    mongo_user_token: "{{ mongodb_user_token.stdout }}"
    s3_hds_bucket: "{{aws_s3_hds_bucket}}"
  with_items:
    - transactional-data-event-listener-channel-config.json
    - transactional-data-event-listener-default-config.json
    - transactional-data-event-listener-mappings-config.json
    - transactional-data-event-listener-metadata-config.json
    - transactional-data-event-listener-target-channel-config.json
    - data-call-mood-listener-channel-config.json
    - data-call-mood-listener-default-config.json
    - data-call-mood-listener-mappings-config.json
    - data-call-mood-listener-metadata-config.json
    - data-call-mood-listener-target-channel-config.json
  when: application_node_type == "analytics"

- name: Generate configuration files
  template:
    src: templates/{{ item }}.j2
    dest: '{{config_folder}}/{{ item }}'
    mode: 0755
  vars:
    organization_ids: "{{ organizations.stdout }}"
    aws_access_id: "{{ apps_user_access_id.stdout }}"
    aws_access_secret_key: "{{ apps_user_secret_key.stdout }}"
    aws_cognito_application_id: "{{ cognito_app_client_id.stdout }}"
    aws_cognito_pool_id: "{{ cognito_user_pool_id.stdout }}"
    mongo_user: "{{ mongodb_user.stdout }}"
    mongo_user_token: "{{ mongodb_user_token.stdout }}"
    s3_hds_bucket: "{{aws_s3_hds_bucket}}"
  with_items:
    - data-call-processor-default-config.json
    - data-call-processor-mappings-config.json
    - data-call-processor-metadata-config.json
    - listener-channel-config.json
    - target-channel-config.json
  when: application_node_type != "analytics"
