
# 1. Featch the CA admin from vault
# 2. register and enroll identity
# 3. save it to vault

# Fetch Vault credentials and location using AWS
- name: Get vault path config
  no_log: true
  shell: |
    export AWS_PROFILE=cicd-role
    /usr/local/bin/aws secretsmanager get-secret-value --secret-id {{ env_id }}-config-vault --version-stage AWSCURRENT --region {{ aws_region }}
  register: vault_config_out
  
- set_fact:
    vault_config: "{{ vault_config_out.stdout | to_json }}"

- name: Fetch Vault Password 
  shell: >
    echo "{{ vault_config }}" | jq -r .SecretString | jq -r .password
  register: vault_password_out
- set_fact:
    vault_password: "{{ vault_password_out.stdout }}"

- name: Fetch Vault url
  shell: >
    echo "{{ vault_config }}" | jq -r .SecretString | jq -r .url
  register: vault_url_out
- set_fact:
    vault_url: "{{ vault_url_out.stdout }}"

- name: Fetch Vault user
  shell: >
    echo "{{ vault_config }}" | jq -r .SecretString | jq -r .username
  register: vault_user_out
- set_fact:
    vault_user: "{{ vault_user_out.stdout }}"

- name: Fetch Vault Path
  shell: >
    echo "{{ vault_config }}" | jq -r .SecretString | jq -r .vaultPath
  register: vault_path_out
- set_fact:
    vault_path: "{{ vault_path_out.stdout }}"

- set_fact:
    vault_ca_admin_path: "kvs/{{ network.org_name }}/ca-admin"
    
- name: Print debug
  debug:
    msg: " url: {{ vault_url }} ,  username: {{ vault_user }} "
   
- name: Fetch the CA admin identity certs from Vault
  community.hashi_vault.vault_read:
    url: "{{ vault_url }}"
    path: "{{ vault_ca_admin_path }}"
    auth_method: userpass
    username: "{{ vault_user }}"
    password: "{{ vault_password }}"
  register: ca_admin_identity


# - name: Register the idenity
#   ibm.blockchain_platform.registered_identity:
#     state: "present"
#     api_endpoint: "{{ console.api_endpoint }}"
#     api_authtype: "{{ console.api_authtype }}"
#     api_key: "{{ console.username }}"
#     api_secret: "{{ console.password }}"
#     api_timeout: "{{ api_timeout | default(omit) }}"
#     certificate_authority: "{{ ca_name }}"
#     registrar: "{{ ca_admin_identity }}"
#     enrollment_id: "{{ identity_id }}"
#     enrollment_secret: "{{ identity_enrolment_secret }}"
#     max_enrollments: -1
#     type: "{{ identity_type }}"

# - name: Enroll the identity
#   ibm.blockchain_platform.enrolled_identity:
#     state: "present"
#     api_endpoint: "{{ console.api_endpoint }}"
#     api_authtype: "{{ console.api_authtype }}"
#     api_key: "{{ console.username }}"
#     api_secret: "{{ console.password }}"
#     api_timeout: "{{ api_timeout | default(omit) }}"
#     certificate_authority: "{{ ca_name }}"
#     name: "{{ organization_name }} Admin"
#     enrollment_id: "{{ identity_id }}"
#     enrollment_secret: "{{ identity_enrolment_secret }}"
#   register: enrolled_identity
- set_fact:
    enrolled_identity: "TEST"

- set_fact:
    vault_user_path: "kvs/{{ network.org_name}}/{{ user_name }}"

- name: Push the enroled identity to Vault
  community.hashi_vault.vault_write:
    url: "{{ vault_url }}"
    path: "{{ vault_user_path }}"
    data:
      data: "{{ enrolled_identity|b64encode }}"
    auth_method: userpass
    username: '{{ vault_user }}'
    password: '{{ vault_password }}'
  register: out
