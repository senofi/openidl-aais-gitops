
# 1. Featch the CA admin from vault
# 2. register and enroll identity
# 3. save it to vault

# Fetch Vault credentials and location using AWS
- name: Get vault path config
  no_log: true
  shell: |
    export AWS_PROFILE=cicd-role
    /usr/local/bin/aws secretsmanager get-secret-value --secret-id {{ env_id }}-kvs-vault --version-stage AWSCURRENT --region {{ aws_region }}
  register: vault_config_out

- set_fact:
    vault_config: "{{ vault_config_out.stdout | from_json | json_query('SecretString') | from_json }}"

- set_fact:
    vault_user_read_path: "{{vault_config.vaultPath}}/{{ identity_id }}"

- name: Try to fetch the entry from vault
  community.hashi_vault.vault_kv2_get:
    url: "{{ vault_config.url }}"
    path: "{{ vault_user_read_path }}"
    engine_mount_point: "kvs"
    auth_method: userpass
    username: "{{ vault_config.username }}"
    password: "{{ vault_config.password }}"
    validate_certs: false
  register: vault_user_entry
  ignore_errors: yes
  
- debug:
    msg: "Vault user {{ vault_user_entry }}"
  
- name: Fail if user is already in vault
  fail:
    msg: User already exists in the wallet
  when: '"Invalid or missing path" not in vault_user_entry.err'

- set_fact:
    vault_ca_admin_path: "{{vault_config.vaultPath}}/{{ network.org_name }}/ca-admin"
   
- name: Fetch the CA admin identity certs from Vault {{ vault_config.url }} with path {{ vault_ca_admin_path }}
  community.hashi_vault.vault_kv2_get:
    url: "{{ vault_config.url }}"
    path: "{{ vault_ca_admin_path }}"
    engine_mount_point: "kvs"
    auth_method: userpass
    username: "{{ vault_config.username }}"
    password: "{{ vault_config.password }}"
    validate_certs: false
  register: ca_admin_identity

- name: Register the idenity
  ibm.blockchain_platform.registered_identity:
    state: "present"
    api_endpoint: "{{ console.api_endpoint }}"
    api_authtype: "{{ console.api_authtype }}"
    api_key: "{{ console.username }}"
    api_secret: "{{ console.password }}"
    api_timeout: "{{ api_timeout | default(omit) }}"
    certificate_authority: "{{ network.ca_name }}"
    registrar: "{{ ca_admin_identity.data.data.data | b64decode | from_json }}"
    enrollment_id: "{{ identity_id }}"
    enrollment_secret: "{{ identity_enrolment_secret }}"
    max_enrollments: -1
    type: "{{ identity_type }}"

- name: Enroll the identity
  ibm.blockchain_platform.enrolled_identity:
    state: "present"
    api_endpoint: "{{ console.api_endpoint }}"
    api_authtype: "{{ console.api_authtype }}"
    api_key: "{{ console.username }}"
    api_secret: "{{ console.password }}"
    api_timeout: "{{ api_timeout | default(omit) }}"
    certificate_authority: "{{ network.ca_name }}"
    name: "{{ identity_id }}"
    enrollment_id: "{{ identity_id }}"
    path: "l.json"
    enrollment_secret: "{{ identity_enrolment_secret }}"
  register: enrolled_identity

- set_fact:
    identity_data:
      credentials:
        certificate: "{{enrolled_identity.enrolled_identity.cert | b64decode | regex_replace('\n' , '\\n') }}"
        privateKey: "{{ enrolled_identity.enrolled_identity.private_key | b64decode | regex_replace('\r\n' , '\\r\\n') }}"
      mspId: "{{network.org_name}}"
      type: "X.509"

- set_fact:
    vault_user_write_path: "kvs/data/{{vault_config.vaultPath}}/{{ identity_id }}"
    
- name: Push the enroled identity to Vault with path {{ vault_user_write_path }}
  community.hashi_vault.vault_write:
    url: "{{ vault_config.url }}"
    path: "{{ vault_user_write_path }}"
    data:
      data: 
        data: "{{ identity_data | to_json | string }}"
        id: "{{ identity_id }}"
    auth_method: userpass
    username: "{{ vault_config.username }}"
    password: "{{ vault_config.password }}"
    validate_certs: false
  register: out
